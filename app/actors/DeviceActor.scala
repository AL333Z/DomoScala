package actors

import akka.actor.{ Actor, ActorLogging }
import scala.concurrent.duration.Duration
import akka.actor.Props

object DeviceActor {
  class SetActivation(value: Double)
  case object On extends SetActivation(1)
  case object Off extends SetActivation(0)
  case class SetActivationValue(value: Double) extends SetActivation(value)

  case object GetLightValue
  case class LightValue(lux: Double)

  case object GetTemperature
  case class Temperature(celsiusTemp: Double)

  case class MoveServo(degrees: Double)

  case class PlayBeep(duration: Duration)

  object GetSoundValue
  case class SoundValue(decibels: Double)

  case object GetSwitchState

  case object Click // generated by button

  case object UnsupportedAction
  case object Ok
  case class Failed(error: Throwable)
}

abstract class DeviceActor(name: String) extends Actor with ActorLogging